@using System.Security.Claims
@model IEnumerable<Casusvictuz.Event>

@{
    ViewData["Title"] = "Index";
    var categories = ViewData["Categories"] as IEnumerable<string>;
}

<h1>Alle opkomende evenementen</h1>

<!-- Form Structure -->
<form asp-action="IndexUser" method="get">
    <div class="form-group">
        <input type="text" name="searchString" class="form-control" placeholder="Zoek op evenement naam of tags" value="@ViewData["CurrentFilter"]" />
    </div>

    <!-- Checkbox to control submenu visibility -->
    <input id="check01" type="checkbox" name="menu" />

    <!-- Label container with arrow icon -->
    <div class="label-container">
        <label for="check01">
            <span>Categories</span>
            <i class="arrow"></i>
        </label>
    </div>

    <!-- Submenu displaying categories -->
    <ul class="submenu">
        @foreach (var category in categories)
        {
            <li>
                <a asp-action="IndexUser" asp-route-category="@category">@category</a>
            </li>
        }
    </ul>
    <li class="submenu">
        <a asp-action="IndexUser" class="btn btn-secondary">Clear Filter</a>
    </li>

    <p></p>
    <button type="submit" class="btn btn-primary">Zoeken</button>
</form>

@if (User.HasClaim("IsMember", "True"))
{
    <div>
        <a asp-action="CreateSuggestion" asp-route-id="@int.Parse(User.FindFirst(ClaimTypes.NameIdentifier)?.Value)" class="btn btn-primary">Evenement Suggestie Maken</a>
    </div>
}
@* <table class="table">
    <thead>
        <tr>
            <th>
                Evenement
            </th>
            <th>
                Datum
            </th>
            <th>
                Tijd
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
        <td>
        @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
        @(item.Date.HasValue ? item.Date.Value.ToString("dd-MM-yyyy") : "N/A")
        </td>
        <td>
        @(item.Date.HasValue ? item.Date.Value.ToString("HH:mm") : "N/A")
        </td>
        <td>
        <a asp-action="DetailsUser" asp-route-id="@item.Id" class="btn btn-primary">Meer info</a>
        </td>
        </tr>
        }
 *@
<div class="container d-flex flex-row flex-wrap">
    @foreach (var item in Model)
    {
        <div class="card p-2 m-1" style="width:18rem;">

            @{
                string imgToShow = item.UrlLinkPicture;
                if (string.IsNullOrEmpty(imgToShow))
                {
                    imgToShow = "https://i.pinimg.com/originals/8e/07/80/8e078013204d0cc9876e9edbb1fd3f85.jpg";
                }
            }
            <img class="card-img-top, IndexPicture"
                 src=@imgToShow
                 onerror="this.onerror; this.src='https://i.pinimg.com/originals/8e/07/80/8e078013204d0cc9876e9edbb1fd3f85.jpg'"
                 alt="Afbeelding niet beschikbaar" />

            <div class="card-body">
                <h5 class="card-title">@item.Name</h5>
                <p class="card-text">@item.Description</p>
                <div class="fw-bold">Datum:</div>
                <p class="card-text">@(item.Date.HasValue ? item.Date.Value.ToString("dd-MM-yyyy") : "N/A")</p>
                <p class="card-text">
                    <div class="fw-bold">Beschikbare plaatsen:</div>
                    @item.Registrations.Count() / @item.Spots
                    @* @if (item.Registrations.FirstOrDefault(r => r.IsOrganised).UserId == loggedInUserId)
                {
                <p class="card-text">
                U bent de organisator van dit evenement.
                </p> *@
                    
                </p>
                <a asp-action="DetailsUser" asp-route-id="@item.Id" class="btn btn-primary">Details</a>

                @{
                    string buttonToShow = "openRegister";

                    if (item.Spots == item.Registrations.Count())
                    {
                        buttonToShow = "closedRegister";
                    }

                    int loggedInUserId = int.Parse(User.FindFirst(ClaimTypes.NameIdentifier)?.Value);
                    if (loggedInUserId != null)
                    {
                        foreach (var registration in item.Registrations)
                        {
                            if (registration.UserId == loggedInUserId)
                            {
                                buttonToShow = "alreadyRegistered";
                            }
                        }
                    }
                }


                @if (buttonToShow == "closedRegister")
                {
                    <a href="#" class="btn btn-secondary" disabled>Gesloten</a>
                }
                else if (buttonToShow == "openRegister")
                {
                    <a asp-action="Register" asp-controller="Events" asp-route-eventId="@item.Id" class="btn btn-primary">Inschrijven</a>
                }
                else if (buttonToShow == "alreadyRegistered")
                {
                    var registrationToCheck = item.Registrations.FirstOrDefault(r => r.IsOrganised);
                    if (registrationToCheck != null && registrationToCheck.UserId == loggedInUserId)
                    {
                        <a  class="btn btn-secondary" disabled>Organistor</a>
                    }
                    else
                    {
                        <a asp-action="Unregister" asp-controller="Events" asp-route-id="@item.Registrations.FirstOrDefault(r => r.UserId == int.Parse(User.FindFirst(ClaimTypes.NameIdentifier)?.Value)).Id" class="btn btn-danger">Uitschrijven</a>
                    }
                }


            </div>
        </div>
    }
</div>

@*  </tbody>
</table>
 *@